name: Common build workflow

on:
  workflow_call:

jobs:
  build:
    runs-on: ubuntu-latest

    environment: dev

    steps:
    #checkout the source code from the git repo
    - uses: actions/checkout@v2

    #caches maven dependencies
    - uses: actions/cache@v1
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-

    #setup java 1.8
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 1.8

    #test
    - name: Print org variables
      run: |
        echo ${{ vars.MULE_DEPLOYMENT_TARGET_DEV }}
        echo ${{ vars.MULE_DEPLOYMENT_TARGET }}

    #create settings.xml file with the connected app credentials
    - name: Create settings.xml
      uses: s4u/maven-settings-action@v2.4.0
      with:
        servers: |
          [
            {
              "id": "AP-Repository",
              "username": "~~~Client~~~",
              "password": "${{ secrets.MULE_CA_CLIENTID_DEV }}~?~${{ secrets.MULE_CA_CLIENTSECRET_DEV }}"

            }
          ]

    #build a jar file and publish it to Exchange
    - name: Publish to Exchange
      run: |
        mvn clean deploy -DskipTests

    - name: Deploy to CH2.0
      run: |
        mvn deploy -Pch20 -DskipTests -DmuleDeploy \
          -DconnectedApp.clientId=${{ secrets.MULE_CA_CLIENTID_DEV }} \
          -DconnectedApp.clientSecret=${{ secrets.MULE_CA_CLIENTSECRET_DEV }} \
          -Dmule.env=${{ vars.MULE_ENV_DEV }} \
          -Dprivate.space.name="${{ vars.MULE_DEPLOYMENT_TARGET_DEV }}" \
          -Denvironment=${{ vars.MULE_AP_ENVIRONMENT_DEV }}\
          -Dch2.replicas=${{ vars.MULE_DEPLOYMENT_REPLICAS_DEV }} \
          -Dch2.vCores=${{ vars.MULE_CH2_VCORES_DEV }} \
          -Dmule.encryption.key=${{ secrets.MULE_ENCRYPTION_KEY_DEV }} \
          -Danypoint.client_id=${{ secrets.MULE_AP_CLIENTID_DEV }} \
          -Danypoint.client_secret=${{ secrets.MULE_AP_CLIENTSECRET_DEV }} 